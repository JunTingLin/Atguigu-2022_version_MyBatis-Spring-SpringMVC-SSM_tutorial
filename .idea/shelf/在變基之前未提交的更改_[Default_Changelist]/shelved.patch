Index: 02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/SelectMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.atguigu.mybatis.mapper;\r\n\r\nimport com.atguigu.mybatis.pojo.User;\r\nimport org.apache.ibatis.annotations.MapKey;\r\nimport org.apache.ibatis.annotations.Param;\r\n\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n/**\r\n * Date:2022/6/28\r\n * Author:ybc\r\n * Description:\r\n */\r\npublic interface SelectMapper {\r\n\r\n    /**\r\n     * 若sql语句查询的结果为多条时，一定不能以实体类类型作为方法的返回值\r\n     * 否则会抛出异常TooManyResultsException\r\n     * 若sql语句查询的结果为1条时，此时可以使用实体类类型或list集合类型作为方法的返回值\r\n     */\r\n\r\n    /**\r\n     * 根据id查询用户信息\r\n     * @param id\r\n     * @return\r\n     */\r\n    User getUserById(@Param(\"id\") Integer id);\r\n\r\n    /**\r\n     * 查询所有的用户信息\r\n     * @return\r\n     */\r\n    List<User> getAllUser();\r\n\r\n    /**\r\n     * 查询用户的总数量\r\n     * @return\r\n     */\r\n    Integer getCount();\r\n\r\n    /**\r\n     * 根据id查询用户信息为map集合\r\n     * @param id\r\n     * @return\r\n     */\r\n    Map<String, Object> getUserByIdToMap(@Param(\"id\") Integer id);\r\n\r\n    /**\r\n     * 查询所有的用户信息为map集合\r\n     * 若查询的数据有多条时，并且要将每条数据转换为map集合\r\n     * 此时有两种解决方案：\r\n     * 1、将mapper接口方法的返回值设置为泛型是map的list集合\r\n     * List<Map<String, Object>> getAllUserToMap();\r\n     * 结果：{password=123456, gender=男, id=1, age=23, email=12345@qq.com, username=admin},{password=123456, gender=男, id=1, age=23, email=12345@qq.com, username=admin}\r\n     * 2、可以将每条数据转换的map集合放在一个大的map中，但是必须要通过@MapKey注解\r\n     * 将查询的某个字段的值作为大的map的键\r\n     * @MapKey(\"id\")\r\n     * Map<String, Object> getAllUserToMap();\r\n     * 结果：\r\n     * {\r\n     *  1={password=123456, gender=男, id=1, age=23, email=12345@qq.com, username=admin},\r\n     *  2={password=123, gender=男, id=2, age=23, email=12345@qq.com, username=zhangsan},\r\n     *  3={password=123456, gender=女, id=3, age=33, email=123@qq.com, username=root},\r\n     *  4={password=123, id=4, username=lisi}\r\n     *  }\r\n     */\r\n    //List<Map<String, Object>> getAllUserToMap();\r\n    @MapKey(\"id\")\r\n    Map<String, Object> getAllUserToMap();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/SelectMapper.java b/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/SelectMapper.java
--- a/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/SelectMapper.java	(revision 2d251b2a4f954071d5ec8ae28e6e5e56992b6d11)
+++ b/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/SelectMapper.java	(date 1661864095908)
@@ -52,7 +52,7 @@
      * 此时有两种解决方案：
      * 1、将mapper接口方法的返回值设置为泛型是map的list集合
      * List<Map<String, Object>> getAllUserToMap();
-     * 结果：{password=123456, gender=男, id=1, age=23, email=12345@qq.com, username=admin},{password=123456, gender=男, id=1, age=23, email=12345@qq.com, username=admin}
+     * 结果：[{password=123456, gender=男, id=1, age=23, email=12345@qq.com, username=admin},{password=123456, gender=男, id=1, age=23, email=12345@qq.com, username=admin}]
      * 2、可以将每条数据转换的map集合放在一个大的map中，但是必须要通过@MapKey注解
      * 将查询的某个字段的值作为大的map的键
      * @MapKey("id")
@@ -66,6 +66,6 @@
      *  }
      */
     //List<Map<String, Object>> getAllUserToMap();
-    @MapKey("id")
+    @MapKey("id")  //Map包Map，以id為key
     Map<String, Object> getAllUserToMap();
 }
Index: 02-mybatis_parameter/src/test/java/com/atguigu/mybatis/test/ParameterTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.atguigu.mybatis.test;\r\n\r\nimport com.atguigu.mybatis.mapper.UserMapper;\r\nimport com.atguigu.mybatis.pojo.User;\r\nimport com.atguigu.mybatis.utils.SqlSessionUtil;\r\nimport org.apache.ibatis.session.SqlSession;\r\nimport org.junit.Test;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n/**\r\n * Date:2022/6/28\r\n * Author:ybc\r\n * Description:\r\n */\r\npublic class ParameterTest {\r\n\r\n    @Test\r\n    public void testGetUserByUsername(){\r\n        SqlSession sqlSession = SqlSessionUtil.getSqlSession();\r\n        UserMapper mapper = sqlSession.getMapper(UserMapper.class);\r\n        User user = mapper.getUserByUsername(\"admin\");\r\n        System.out.println(user);\r\n    }\r\n\r\n    @Test\r\n    public void testCheckLogin(){\r\n        SqlSession sqlSession = SqlSessionUtil.getSqlSession();\r\n        UserMapper mapper = sqlSession.getMapper(UserMapper.class);\r\n        User user = mapper.checkLogin(\"admin\", \"123456\");\r\n        System.out.println(user);\r\n    }\r\n\r\n    @Test\r\n    public void testCheckLoginByMap(){\r\n        SqlSession sqlSession = SqlSessionUtil.getSqlSession();\r\n        UserMapper mapper = sqlSession.getMapper(UserMapper.class);\r\n        Map<String, Object> map = new HashMap<>();\r\n        map.put(\"username\", \"admin\");\r\n        map.put(\"password\", \"123456\");\r\n        User user = mapper.checkLoginByMap(map);\r\n        System.out.println(user);\r\n    }\r\n\r\n    @Test\r\n    public void testInsertUser(){\r\n        SqlSession sqlSession = SqlSessionUtil.getSqlSession();\r\n        UserMapper mapper = sqlSession.getMapper(UserMapper.class);\r\n        User user = new User(null, \"root\", \"123456\", 33, \"女\", \"123@qq.com\");\r\n        mapper.insertUser(user);\r\n    }\r\n\r\n    @Test\r\n    public void testCheckLoginByParam(){\r\n        SqlSession sqlSession = SqlSessionUtil.getSqlSession();\r\n        UserMapper mapper = sqlSession.getMapper(UserMapper.class);\r\n        User user = mapper.checkLoginByParam(\"admin\", \"123456\");\r\n        System.out.println(user);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/02-mybatis_parameter/src/test/java/com/atguigu/mybatis/test/ParameterTest.java b/02-mybatis_parameter/src/test/java/com/atguigu/mybatis/test/ParameterTest.java
--- a/02-mybatis_parameter/src/test/java/com/atguigu/mybatis/test/ParameterTest.java	(revision 2d251b2a4f954071d5ec8ae28e6e5e56992b6d11)
+++ b/02-mybatis_parameter/src/test/java/com/atguigu/mybatis/test/ParameterTest.java	(date 1661861176849)
@@ -48,6 +48,7 @@
         SqlSession sqlSession = SqlSessionUtil.getSqlSession();
         UserMapper mapper = sqlSession.getMapper(UserMapper.class);
         User user = new User(null, "root", "123456", 33, "女", "123@qq.com");
+//      //id為自動遞增
         mapper.insertUser(user);
     }
 
Index: 02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/SpecialSQLMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.atguigu.mybatis.mapper;\r\n\r\nimport com.atguigu.mybatis.pojo.User;\r\nimport org.apache.ibatis.annotations.Param;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * Date:2022/6/29\r\n * Author:ybc\r\n * Description:\r\n */\r\npublic interface SpecialSQLMapper {\r\n\r\n    /**\r\n     * 通过用户名模糊查询用户信息\r\n     * @param mohu\r\n     * @return\r\n     */\r\n    List<User> getUserByLike(@Param(\"mohu\") String mohu);\r\n\r\n    /**\r\n     * 批量删除\r\n     * @param ids\r\n     */\r\n    void deleteMoreUser(@Param(\"ids\") String ids);\r\n\r\n    /**\r\n     * 动态设置表名，查询用户信息\r\n     * @param tableName\r\n     * @return\r\n     */\r\n    List<User> getUserList(@Param(\"tableName\") String tableName);\r\n\r\n    /**\r\n     * 添加用户信息并获取自增的主键\r\n     * @param user\r\n     */\r\n    void insertUser(User user);\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/SpecialSQLMapper.java b/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/SpecialSQLMapper.java
--- a/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/SpecialSQLMapper.java	(revision 2d251b2a4f954071d5ec8ae28e6e5e56992b6d11)
+++ b/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/SpecialSQLMapper.java	(date 1661865340950)
@@ -17,7 +17,7 @@
      * @param mohu
      * @return
      */
-    List<User> getUserByLike(@Param("mohu") String mohu);
+    List<User> getUserByLike(@Param("mohu") String mohu);  //mohu模糊
 
     /**
      * 批量删除
Index: 02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/UserMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.atguigu.mybatis.mapper;\r\n\r\nimport com.atguigu.mybatis.pojo.User;\r\nimport org.apache.ibatis.annotations.Param;\r\n\r\nimport java.util.Map;\r\n\r\n/**\r\n * Date:2022/6/28\r\n * Author:ybc\r\n * Description:\r\n * MyBatis获取参数值的两种方式：#{}和${}\r\n * #{}的本质是占位符赋值，${}的本质是字符串拼接\r\n * 1、若mapper接口方法的参数为单个的字面量类型\r\n * 此时可以通过#{}和${}以任意的内容获取参数值，一定要注意${}的单引号问题\r\n * 2、若mapper接口方法的参数为多个的字面量类型\r\n * 此时MyBatis会将参数放在map集合中，以两种方式存储数据\r\n * a>以arg0,arg1...为键，以参数为值\r\n * b>以param1,param2...为键，以参数为值\r\n * 因此，只需要通过#{}和${}访问map集合的键，就可以获取相对应的值,一定要注意${}的单引号问题\r\n * 3、若mapper接口方法的参数为map集合类型的参数\r\n * 只需要通过#{}和${}访问map集合的键，就可以获取相对应的值,一定要注意${}的单引号问题\r\n * 4、若mapper接口方法的参数为实体类类型的参数\r\n * 只需要通过#{}和${}访问实体类中的属性名，就可以获取相对应的属性值，一定要注意${}的单引号问题\r\n * 5、可以在mapper接口方法的参数上设置@Param注解\r\n * 此时MyBatis会将这些参数放在map中，以两种方式进行存储\r\n * a>以@Param注解的value属性值为键，以参数为值\r\n * b>以param1,param2...为键，以参数为值\r\n * 只需要通过#{}和${}访问map集合的键，就可以获取相对应的值,一定要注意${}的单引号问题\r\n */\r\npublic interface UserMapper {\r\n\r\n    /**\r\n     * 根据用户名查询用户信息\r\n     * @param username\r\n     * @return\r\n     */\r\n    User getUserByUsername(String username);\r\n\r\n    /**\r\n     * 验证登录\r\n     * @param username\r\n     * @param password\r\n     * @return\r\n     */\r\n    User checkLogin(String username, String password);\r\n\r\n    /**\r\n     * 验证登录（以map集合作为参数）\r\n     * @param map\r\n     * @return\r\n     */\r\n    User checkLoginByMap(Map<String, Object> map);\r\n\r\n    /**\r\n     * 添加用户信息\r\n     * @param user\r\n     */\r\n    void insertUser(User user);\r\n\r\n    /**\r\n     * 验证登录（使用@Param）\r\n     * @param username\r\n     * @param password\r\n     * @return\r\n     */\r\n    User checkLoginByParam(@Param(\"username\") String username, @Param(\"password\") String password);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/UserMapper.java b/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/UserMapper.java
--- a/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/UserMapper.java	(revision 2d251b2a4f954071d5ec8ae28e6e5e56992b6d11)
+++ b/02-mybatis_parameter/src/main/java/com/atguigu/mybatis/mapper/UserMapper.java	(date 1661861553116)
@@ -22,6 +22,7 @@
  * 只需要通过#{}和${}访问map集合的键，就可以获取相对应的值,一定要注意${}的单引号问题
  * 4、若mapper接口方法的参数为实体类类型的参数
  * 只需要通过#{}和${}访问实体类中的属性名，就可以获取相对应的属性值，一定要注意${}的单引号问题
+ * 補充: 屬性名並非完全是成員變量，而是setter、getter去掉set、get改小寫
  * 5、可以在mapper接口方法的参数上设置@Param注解
  * 此时MyBatis会将这些参数放在map中，以两种方式进行存储
  * a>以@Param注解的value属性值为键，以参数为值
@@ -64,5 +65,7 @@
      * @param password
      * @return
      */
-    User checkLoginByParam(@Param("username") String username, @Param("password") String password);
+    User checkLoginByParam(@Param(value = "username") String username, @Param("password") String password);
+    //只為value屬性附值，"value ="可不寫
+    //@註解的value屬性值作為key
 }
Index: 02-mybatis_parameter/src/test/java/com/atguigu/mybatis/test/SpecialSQLMapperTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.atguigu.mybatis.test;\r\n\r\nimport com.atguigu.mybatis.mapper.SpecialSQLMapper;\r\nimport com.atguigu.mybatis.pojo.User;\r\nimport com.atguigu.mybatis.utils.SqlSessionUtil;\r\nimport org.apache.ibatis.session.SqlSession;\r\nimport org.junit.Test;\r\n\r\nimport java.sql.*;\r\nimport java.util.List;\r\n\r\n/**\r\n * Date:2022/6/29\r\n * Author:ybc\r\n * Description:\r\n */\r\npublic class SpecialSQLMapperTest {\r\n\r\n    @Test\r\n    public void testGetUserByLike(){\r\n        SqlSession sqlSession = SqlSessionUtil.getSqlSession();\r\n        SpecialSQLMapper mapper = sqlSession.getMapper(SpecialSQLMapper.class);\r\n        List<User> list = mapper.getUserByLike(\"a\");\r\n        list.forEach(System.out::println);\r\n    }\r\n\r\n    @Test\r\n    public void testDeleteMoreUser(){\r\n        SqlSession sqlSession = SqlSessionUtil.getSqlSession();\r\n        SpecialSQLMapper mapper = sqlSession.getMapper(SpecialSQLMapper.class);\r\n        mapper.deleteMoreUser(\"9,10\");\r\n    }\r\n\r\n    @Test\r\n    public void testGetUserList(){\r\n        SqlSession sqlSession = SqlSessionUtil.getSqlSession();\r\n        SpecialSQLMapper mapper = sqlSession.getMapper(SpecialSQLMapper.class);\r\n        List<User> list = mapper.getUserList(\"t_user\");\r\n        list.forEach(System.out::println);\r\n    }\r\n\r\n    @Test\r\n    public void testInsertUser(){\r\n        SqlSession sqlSession = SqlSessionUtil.getSqlSession();\r\n        SpecialSQLMapper mapper = sqlSession.getMapper(SpecialSQLMapper.class);\r\n        User user = new User(null,\"xiaoming\",\"123456\",23,\"男\",\"123@qq.com\");\r\n        mapper.insertUser(user);\r\n        System.out.println(user);\r\n    }\r\n\r\n    public void testJDBC(){\r\n        try {\r\n            Class.forName(\"\");\r\n            Connection connection = DriverManager.getConnection(\"\",\"\",\"\");\r\n            /*String sql = \"select * from t_user where username like '%?%'\";\r\n            PreparedStatement ps = connection.prepareStatement(sql);*/\r\n            //ps.setString(1, \"a\");\r\n            String sql = \"insert into t_user values()\";\r\n            PreparedStatement ps = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\r\n            ps.executeUpdate();\r\n            ResultSet resultSet = ps.getGeneratedKeys();\r\n            resultSet.next();\r\n            int id = resultSet.getInt(1);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/02-mybatis_parameter/src/test/java/com/atguigu/mybatis/test/SpecialSQLMapperTest.java b/02-mybatis_parameter/src/test/java/com/atguigu/mybatis/test/SpecialSQLMapperTest.java
--- a/02-mybatis_parameter/src/test/java/com/atguigu/mybatis/test/SpecialSQLMapperTest.java	(revision 2d251b2a4f954071d5ec8ae28e6e5e56992b6d11)
+++ b/02-mybatis_parameter/src/test/java/com/atguigu/mybatis/test/SpecialSQLMapperTest.java	(date 1661865157141)
@@ -54,7 +54,7 @@
             Connection connection = DriverManager.getConnection("","","");
             /*String sql = "select * from t_user where username like '%?%'";
             PreparedStatement ps = connection.prepareStatement(sql);*/
-            //ps.setString(1, "a");
+            //ps.setString(1, "a");  //不對，編譯直接爆紅，找不到佔位符
             String sql = "insert into t_user values()";
             PreparedStatement ps = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
             ps.executeUpdate();
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"spring_helloworld\" />\r\n        <module name=\"spring-proxy\" />\r\n        <module name=\"mybatis_resultMap\" />\r\n        <module name=\"spring_mvc_demo\" />\r\n        <module name=\"spring_listener\" />\r\n        <module name=\"spring_mvc_ajax\" />\r\n        <module name=\"ssm\" />\r\n        <module name=\"spring_mvc_annotation\" />\r\n        <module name=\"spring_mvc_helloworld\" />\r\n        <module name=\"spring_mvc_rest\" />\r\n        <module name=\"spring-transaction\" />\r\n        <module name=\"spring_mvc_extension\" />\r\n        <module name=\"mybatis_mbg\" />\r\n        <module name=\"spring-aop\" />\r\n        <module name=\"02-mybatis_parameter\" />\r\n        <module name=\"mybatis_dynamicSQL\" />\r\n        <module name=\"mybatis_cache\" />\r\n        <module name=\"01-mybatis_helloworld\" />\r\n        <module name=\"spring_ioc_xml\" />\r\n        <module name=\"spring_ioc_annotation\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n    <bytecodeTargetLevel>\r\n      <module name=\"01-mybatis_helloworld\" target=\"1.8\" />\r\n      <module name=\"02-mybatis_parameter\" target=\"1.8\" />\r\n      <module name=\"mybatis_cache\" target=\"1.5\" />\r\n      <module name=\"mybatis_dynamicSQL\" target=\"1.5\" />\r\n      <module name=\"mybatis_mbg\" target=\"1.5\" />\r\n      <module name=\"mybatis_resultMap\" target=\"1.5\" />\r\n      <module name=\"spring-aop\" target=\"1.5\" />\r\n      <module name=\"spring-proxy\" target=\"1.5\" />\r\n      <module name=\"spring-transaction\" target=\"1.5\" />\r\n      <module name=\"spring_helloworld\" target=\"1.5\" />\r\n      <module name=\"spring_ioc_annotation\" target=\"1.5\" />\r\n      <module name=\"spring_ioc_xml\" target=\"1.5\" />\r\n      <module name=\"spring_listener\" target=\"1.5\" />\r\n      <module name=\"spring_mvc_ajax\" target=\"1.5\" />\r\n      <module name=\"spring_mvc_annotation\" target=\"1.5\" />\r\n      <module name=\"spring_mvc_demo\" target=\"1.5\" />\r\n      <module name=\"spring_mvc_extension\" target=\"1.5\" />\r\n      <module name=\"spring_mvc_helloworld\" target=\"1.5\" />\r\n      <module name=\"spring_mvc_rest\" target=\"1.5\" />\r\n      <module name=\"ssm\" target=\"1.5\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision 2d251b2a4f954071d5ec8ae28e6e5e56992b6d11)
+++ b/.idea/compiler.xml	(date 1661855708662)
@@ -48,7 +48,7 @@
       <module name="spring_mvc_extension" target="1.5" />
       <module name="spring_mvc_helloworld" target="1.5" />
       <module name="spring_mvc_rest" target="1.5" />
-      <module name="ssm" target="1.5" />
+      <module name="ssm" target="12" />
     </bytecodeTargetLevel>
   </component>
 </project>
\ No newline at end of file
Index: 02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/UserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<!DOCTYPE mapper\r\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\r\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n\r\n<mapper namespace=\"com.atguigu.mybatis.mapper.UserMapper\">\r\n\r\n    <!--User getUserByUsername(String username);-->\r\n    <select id=\"getUserByUsername\" resultType=\"User\">\r\n        <!--select * from t_user where username = #{username}-->\r\n        select * from t_user where username = '${username}'\r\n    </select>\r\n\r\n    <!--User checkLogin(String username, String password);-->\r\n    <select id=\"checkLogin\" resultType=\"User\">\r\n        <!--select * from t_user where username = #{param1} and password = #{param2}-->\r\n        select * from t_user where username = '${param1}' and password = '${param2}'\r\n    </select>\r\n\r\n    <!--User checkLoginByMap(Map<String, Object> map);-->\r\n    <select id=\"checkLoginByMap\" resultType=\"User\">\r\n        select * from t_user where username = #{username} and password = #{password}\r\n    </select>\r\n\r\n    <!--void insertUser(User user);-->\r\n    <insert id=\"insertUser\">\r\n        insert into t_user values(null,#{username},#{password},#{age},#{gender},#{email})\r\n    </insert>\r\n\r\n    <!--User checkLoginByParam(@Param(\"username\") String username, @Param(\"password\") String password);-->\r\n    <select id=\"checkLoginByParam\" resultType=\"User\">\r\n        select * from t_user where username = #{username} and password = #{password}\r\n    </select>\r\n\r\n</mapper>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/UserMapper.xml b/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/UserMapper.xml
--- a/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/UserMapper.xml	(revision 2d251b2a4f954071d5ec8ae28e6e5e56992b6d11)
+++ b/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/UserMapper.xml	(date 1661855750995)
@@ -7,7 +7,9 @@
 
     <!--User getUserByUsername(String username);-->
     <select id="getUserByUsername" resultType="User">
+        <!--透過?佔位符 -->
         <!--select * from t_user where username = #{username}-->
+        <!-- 透過字串拼接 -->
         select * from t_user where username = '${username}'
     </select>
 
Index: 02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/SpecialSQLMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<!DOCTYPE mapper\r\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\r\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n\r\n<mapper namespace=\"com.atguigu.mybatis.mapper.SpecialSQLMapper\">\r\n\r\n    <!--List<User> getUserByLike(@Param(\"mohu\") String mohu);-->\r\n    <select id=\"getUserByLike\" resultType=\"User\">\r\n        <!--select * from t_user where username like '%${mohu}%'-->\r\n        <!--select * from t_user where username like concat('%',#{mohu},'%')-->\r\n        select * from t_user where username like \"%\"#{mohu}\"%\"\r\n    </select>\r\n\r\n    <!--void deleteMoreUser(@Param(\"ids\") String ids);//ids:9,10-->\r\n    <delete id=\"deleteMoreUser\">\r\n        delete from t_user where id in(${ids})\r\n    </delete>\r\n\r\n    <!--List<User> getUserList(@Param(\"tableName\") String tableName);-->\r\n    <select id=\"getUserList\" resultType=\"User\">\r\n        select * from ${tableName}\r\n    </select>\r\n\r\n    <!--void insertUser(User user);-->\r\n    <!--\r\n        useGeneratedKeys:表示当前添加功能使用自增的主键\r\n        keyProperty:将添加的数据的自增主键为实体类类型的参数的属性赋值\r\n    -->\r\n    <insert id=\"insertUser\" useGeneratedKeys=\"true\" keyProperty=\"id\">\r\n        insert into t_user values(null,#{username},#{password},#{age},#{gender},#{email})\r\n    </insert>\r\n\r\n</mapper>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/SpecialSQLMapper.xml b/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/SpecialSQLMapper.xml
--- a/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/SpecialSQLMapper.xml	(revision 2d251b2a4f954071d5ec8ae28e6e5e56992b6d11)
+++ b/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/SpecialSQLMapper.xml	(date 1661867304979)
@@ -20,12 +20,14 @@
     <!--List<User> getUserList(@Param("tableName") String tableName);-->
     <select id="getUserList" resultType="User">
         select * from ${tableName}
+        <!-- 注意: 表名在sql語句中使不用加單引號的，故不能用#{tableName}，#{}佔位符附值會自動加單引號-->
     </select>
 
     <!--void insertUser(User user);-->
     <!--
         useGeneratedKeys:表示当前添加功能使用自增的主键
         keyProperty:将添加的数据的自增主键为实体类类型的参数的属性赋值
+        補充: 為何不作為方法的返回值? 因為增刪改方法的返回值是固定的(受影響的行數)
     -->
     <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
         insert into t_user values(null,#{username},#{password},#{age},#{gender},#{email})
Index: ssm/ssm.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"Spring\" name=\"Spring\">\r\n      <configuration />\r\n    </facet>\r\n    <facet type=\"web\" name=\"Web\">\r\n      <configuration>\r\n        <descriptors>\r\n          <deploymentDescriptor name=\"web.xml\" url=\"file://$MODULE_DIR$/src/main/webapp/WEB-INF/web.xml\" />\r\n        </descriptors>\r\n        <webroots>\r\n          <root url=\"file://$MODULE_DIR$/src/main/webapp\" relative=\"/\" />\r\n        </webroots>\r\n        <sourceRoots>\r\n          <root url=\"file://$MODULE_DIR$/src/main/java\" />\r\n          <root url=\"file://$MODULE_DIR$/src/main/resources\" />\r\n        </sourceRoots>\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_5\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-context:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-aop:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-core:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-jcl:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-expression:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-beans:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-web:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-webmvc:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-jdbc:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-tx:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-aspects:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.aspectj:aspectjweaver:1.9.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-test:5.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.mybatis:mybatis:3.5.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.mybatis:mybatis-spring:2.0.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.alibaba:druid:1.0.9\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: junit:junit:4.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: mysql:mysql-connector-java:8.0.16\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.protobuf:protobuf-java:3.6.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: log4j:log4j:1.2.17\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.pagehelper:pagehelper:5.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.jsqlparser:jsqlparser:3.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: ch.qos.logback:logback-classic:1.2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: ch.qos.logback:logback-core:1.2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-api:1.7.25\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"Maven: javax.servlet:javax.servlet-api:3.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-databind:2.12.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-annotations:2.12.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-core:2.12.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-fileupload:commons-fileupload:1.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-io:commons-io:2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.thymeleaf:thymeleaf-spring5:3.0.12.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.thymeleaf:thymeleaf:3.0.12.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.attoparser:attoparser:2.0.5.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.unbescape:unbescape:1.1.6.RELEASE\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ssm/ssm.iml b/ssm/ssm.iml
--- a/ssm/ssm.iml	(revision 2d251b2a4f954071d5ec8ae28e6e5e56992b6d11)
+++ b/ssm/ssm.iml	(date 1661855708651)
@@ -19,7 +19,7 @@
       </configuration>
     </facet>
   </component>
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_5">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_12">
     <output url="file://$MODULE_DIR$/target/classes" />
     <output-test url="file://$MODULE_DIR$/target/test-classes" />
     <content url="file://$MODULE_DIR$">
Index: 02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/SelectMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<!DOCTYPE mapper\r\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\r\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n\r\n<mapper namespace=\"com.atguigu.mybatis.mapper.SelectMapper\">\r\n\r\n    <!--User getUserById(@Param(\"id\") Integer id);-->\r\n    <select id=\"getUserById\" resultType=\"User\">\r\n        select * from t_user where id = #{id}\r\n    </select>\r\n\r\n    <!--List<User> getAllUser();-->\r\n    <select id=\"getAllUser\" resultType=\"User\">\r\n        select * from t_user\r\n    </select>\r\n\r\n    <!--Integer getCount();-->\r\n    <!--\r\n        MyBatis中为Java中常用的类型设置了类型别名\r\n        Integer：Integer，int\r\n        int：_int,_integer\r\n        Map：map\r\n        String：string\r\n    -->\r\n    <select id=\"getCount\" resultType=\"int\">\r\n        select count(*) from t_user\r\n    </select>\r\n\r\n    <!--Map<String, Object> getUserByIdToMap(@Param(\"id\") Integer id);-->\r\n    <select id=\"getUserByIdToMap\" resultType=\"map\">\r\n        select * from t_user where id = #{id}\r\n    </select>\r\n\r\n    <!--Map<String, Object> getAllUserToMap();-->\r\n    <select id=\"getAllUserToMap\" resultType=\"map\">\r\n        select * from t_user\r\n    </select>\r\n    \r\n</mapper>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/SelectMapper.xml b/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/SelectMapper.xml
--- a/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/SelectMapper.xml	(revision 2d251b2a4f954071d5ec8ae28e6e5e56992b6d11)
+++ b/02-mybatis_parameter/src/main/resources/com/atguigu/mybatis/mapper/SelectMapper.xml	(date 1661863133688)
@@ -23,6 +23,7 @@
         Map：map
         String：string
     -->
+    <!-- 補充: 這邊不使用MyBatis預設別名也行，用完整包名java.lang.Integer   -->
     <select id="getCount" resultType="int">
         select count(*) from t_user
     </select>
